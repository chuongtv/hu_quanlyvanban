@model nvngoc31122015.giamsatgiangday.library.GiamSatGiangDay.QuanLyNghiBu
@Html.HiddenFor(model => Model.NhanVienGuid, new { id = "NhanVienGuid" })
<div class="show" id="show">
    <div class="row form-group">
        <div class="col-sm-2">
            @Html.DropDownListFor(model => Model.NamHocID, new SelectList(Model.ListNamHoc_Guid, "ValueString", "Name", Model.NamHocID), new { @class = "form-control chosen-select", id = "DDL_NamHoc_Guid" })
            @Html.ValidationMessageFor(model => Model.NamHocID, null, new { @class = "text-danger" })
        </div>
        <div id="data_TuNgay_Time" class="col-sm-2">
            <div class="input-group date">
                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                <input type="datetime" value="" name="TuNgay_Time" id="tungay_time" class="text-box single-line" placeholder="Từ ngày" />
            </div>
        </div>
        <div id="data_DenNgay_Time" class="col-sm-2">
            <div class="input-group date">
                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                <input type="datetime" value="" name="DenNgay_Time" id="denngay_time" class="text-box single-line" placeholder="Đến ngày" />
            </div>
        </div>
        <div class="col-sm-3">
            @*<div class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                    <label class="btn btn-primary">
                        @Html.RadioButtonFor(model => model.LoaiPhieu_Guid, "radiobutton1", new { name = "searchType" }) RadioButton 1
                    </label>

                    <label class="btn btn-primary">
                        @Html.RadioButtonFor(model => model.LoaiPhieu_Guid, "radiobutton2", new { name = "searchType" }) RadioButton2
                    </label>
                </div>*@

            @*<div id="searchDiv" class="btn-group" data-toggle="buttons" style="padding-bottom:10px">
                    <label class="btn btn-primary">
                        @Html.RadioButtonFor(model => model.LoaiPhieu_Guid, "radiobutton1") Nghỉ
                    </label>
                    <label class="btn btn-primary">
                        @Html.RadioButtonFor(model => model.LoaiPhieu_Guid, "radiobutton2") Bù
                    </label>
                    <label class="btn btn-primary">
                        @Html.RadioButtonFor(model => model.LoaiPhieu_Guid, "radiobutton3") Bù trước
                    </label>
                </div>
                <div class="btn-group" data-toggle="buttons-radio" style="padding-bottom:10px">

                    <label class="btn btn-primary">
                        @Html.RadioButtonFor(model => model.LoaiPhieu_Guid, "radiobutton1") RadioButton 1
                    </label>


                    <label class="btn btn-primary">
                        @Html.RadioButtonFor(model => model.LoaiPhieu_Guid, "radiobutton2") RadioButton2
                    </label>
                </div>*@
            <label class="checkbox-inline"> <input type="checkbox" id="checkPhieuNghi" checked>Nghỉ</label>
            <label class="checkbox-inline"><input type="checkbox" id="checkPhieuBu" checked>Bù</label>
            <label class="checkbox-inline"><input type="checkbox" id="checkPhieuBuTruoc" checked>Bù trước</label>
            <label class="checkbox-inline" style="display: none !important;"><input type="checkbox" id="checkPhieuMuonPhong">Mượn phòng</label>
            @*<label class="radio-inline">
                    @Html.RadioButton("rbGrpLoaiPhieu", "phieunghi", false)Nghỉ
                </label>
                <label class="radio-inline">
                    @Html.RadioButton("rbGrpLoaiPhieu", "phieubu", false)Bù
                </label>
                <label class="radio-inline">
                    @Html.RadioButton("rbGrpLoaiPhieu", "phieubutruoc", false)Bù trước
                </label>*@
            @*<div class="btn-group">
                    <button class="btn btn-default" type="button">Nghỉ</button>
                    <button class="btn btn-default" type="button">Bù</button>
                    <button class="btn btn-default" type="button">Bù trước</button>
                </div>*@
        </div>
    </div>
    <div class="row form-group">
        <div class="col-sm-2">
            @*<input id="NhanVienID"
                placeholder="Giảng viên"
                onkeypress=""
                class="form-control"
                action="@Url.Action("QuanLyDanhSachNghiBu_LoadAutoCompleteNhanVien", "GiamSatGiangDay")" />*@
            <input id="NhanVienID"
                   placeholder="Giảng viên"
                   onkeypress=""
                   class="form-control"
                   data-otf-action="@Url.Action("LoadAutoCompateGiangVien", "GiamSatGiangDay")" />
        </div>
        <div class="col-sm-2">
            <input id="MonHocID"
                   placeholder="Mã môn học"
                   onkeypress=""
                   class="form-control"
                   data-otf-action="@Url.Action("QuanLyDanhSachNghiBu_LoadAutoCompleteMonHoc", "GiamSatGiangDay")" />
        </div>
    </div>
</div>

@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(
        @<script type="text/javascript">

            AutoCompleteSearchMon('#MonHocID', '#MonHocID');
            //AutoCompleteSearchGiangVien('#NhanVienID', '#NhanVienGuid');

            AutocompleteNhanVienHinh('#NhanVienID', '#NhanVienGuid');
            $(document).ready(function () {
                $('#NhanVienID').on('input', function () {
                    if ($('#NhanVienID').val() == "")
                        $('#NhanVienGuid').val("");
                });
            });

            //Su dung cau hinh dropdownlist
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Lỗi! Vui lòng chọn ít nhất 1 mục.' },
                '.chosen-select-width': { width: "95%" }
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }
            function AutoCompleteSearchMon(element, valueset) {

                var $input = $(element);
                function CreateAutoCompleteSearchMon() {
                    var options = {
                        columns: ["value", "label", "valuequery"],
                        delay: 700,
                        source: $input.attr("data-otf-action"),
                        select: function (event, ui) {
                            this.value = (ui.item ? ui.item.manv : '');
                            //$(valueset).val(ui.item.value);
                            //alert($(valueset).val());
                            return false;
                        },
                        focus: function (event, ui) {
                            $(this).val(ui.item.manv);
                            return false;
                        },
                    };
                    $input.autocomplete(options);

                }
                CreateAutoCompleteSearchMon();
            }

            function AutoCompleteSearchNhanVien(element, valueset) {

                var $input = $(element);
                function CreateAutoCompleteSearchNhanVien() {
                    var options = {
                        columns: ["value", "label", "valuequery"],
                        delay: 700,
                        source: $input.attr("action"),
                        select: function (event, ui) {
                            this.value = (ui.item ? ui.item.hovaten : '');
                            $(valueset).val(ui.item.value);
                            //alert($(valueset).val());
                            return false;
                        },
                        focus: function (event, ui) {
                            $(this).val(ui.item.hovaten);
                            return false;
                        },
                    };
                    $input.autocomplete(options);

                }
                CreateAutoCompleteSearchNhanVien();
            }

            function AutoCompleteSearchGiangVien(element, valueset) {

                var $input = $(element);
                var options = {
                    requestDelay: 500,
                    url: function (keyWord) {
                        return $input.attr("data-otf-action") + "?term=" + keyWord;
                    },
                    getValue: "label",
                    list: {
                        match: {
                            enabled: false,
                        },
                        onSelectItemEvent: function () {
                            var value = $(element).getSelectedItemData().id; //get the id associated with the selected value
                            $(valueset).val(value).trigger("change"); //copy it to the hidden field
                        }
                    },
                    template: {
                        type: "custom",
                        method: function (value, item) {
                            return "<img src='" + item.LinkHinhAnh + "' style='width:40px; height:40px; float:left;' /><strong style='float:left; margin-left:10px;'>" + value + "</strong><br/><span style='margin-left:10px;'>" + item.hovaten + " - " + item.valuequery + "</span><div style='clear:both;'></div>";
                        }
                    }
                };
                $input.easyAutocomplete(options);
            }

            function AutocompleteNhanVienHinh(element, valueset) {
                var $input = $(element);
                var options = {
                    requestDelay: 500,
                    url: function (keyWord) {
                        return $input.attr("data-otf-action") + "?term=" + keyWord;
                    },
                    getValue: "label",
                    list: {
                        onShowListEvent: function () {
                            //$(element).val("").trigger("change");
                            $(valueset).val("").trigger("change");
                            //$(Name).html("");
                        },
                        onSelectItemEvent: function () {
                            // gan lai gia tri khi chon
                            var valuename = $(element).getSelectedItemData().hovaten;
                            var valueguid = $(element).getSelectedItemData().value;

                            $(element).val(valuename).trigger("change");
                            $(valueset).val(valueguid).trigger("change");
                        },
                        onHideListEvent: function () {
                            //console.log($(valueset).val());
                        },
                        match: {
                            enabled: false,
                        },
                    },
                    template: {
                        type: "custom",
                        method: function (value, item) {
                            return "<img src='" + item.LinkHinhAnh + "' style='width:40px; height:40px; float:left;' /><strong style='float:left; margin-left:10px;'>" + value + "</strong><br/><span style='margin-left:10px;'>" + item.hovaten + " - " + item.valuequery + "</span><div style='clear:both;'></div>";
                        }
                    }
                };
                $input.easyAutocomplete(options);
            }

            function ObjecttoParams(obj) {
                var p = [];
                for (var key in obj) {
                    p.push(key + '=' + encodeURIComponent(obj[key]));
                }
                return p.join('&');
            };


        </script>
, true);
}









