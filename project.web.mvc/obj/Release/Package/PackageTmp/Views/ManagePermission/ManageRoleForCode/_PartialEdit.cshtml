@*
    Author:   			tvchuong
    Created: 			2015-12-3
    Last Modified: 		2015-12-3
*@
@model nvngoc29082015.permission.library.ManageRoleForCode.UpdateRoleForCodeView

<div class="row">
    <div class="col-sm-12">

        @using (Ajax.BeginForm(
                                    "RoleForCodeEdit",
                                    "ManagePermission",
                                    new AjaxOptions
                                {
                                    InsertionMode = InsertionMode.Replace,//cach thuc update du lieu. Thay the hay them vao
                                    HttpMethod = "POST",
                                    UpdateTargetId = "CPManageRoleForCode",
                                    LoadingElementId = "loader"
                                }, new { @class = "form-horizontal", id = "frm_EditRoleForCode" }))
        {
            @Html.HiddenFor(model => Model.RoleForCodeGuid)
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="form-group ">
                @Html.LabelFor(model => Model.RoleForCodeName, new { @class = "col-sm-2 control-label", @for = "text_RoleForCodeName" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(model => Model.RoleForCodeName, new { @class = "form-control", id = "text_RoleForCodeName" })
                    @Html.ValidationMessageFor(model => Model.RoleForCodeName, null, new { @class = "text-danger" })
                </div>
                <div class="col-sm-2">

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => Model.ModuleGuid, new { @class = "col-sm-2 control-label", @for = "DDL_ModuleGuid" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(model => Model.ModuleGuid, new SelectList(Model.ListModuleGuid, "ValueString", "Name"), new { @class = "form-control chosen-select", id = "DDL_ModuleGuid" })
                    @Html.ValidationMessageFor(model => Model.ModuleGuid, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => Model.Description, new { @class = "col-sm-2 control-label", @for = "text_Description" })
                <div class="col-sm-6">
                    @Html.TextAreaFor(model => Model.Description, new { @class = "form-control", id = "text_Description" })
                    @Html.ValidationMessageFor(model => Model.Description, null, new { @class = "text-danger" })
                </div>

            </div>

        }

    </div>
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3 text-center">
            <div class="btn-toolbar">
                <button type="button"
                        onclick="ManageRoleForCode_RoleForCode_DeleteView(this)"
                        data-otf-action="@Url.Action("RoleForCodeDelete", "ManagePermission", null, Request.Url.Scheme)?id=@Model.RoleForCodeGuid"
                        data-otf-action-exit="@Url.Action("ManageRoleForCode", "ManagePermission", null, Request.Url.Scheme)"
                        data-otf-confirm="Bạn muốn xóa dữ liệu này?"
                        class="btn btn-danger">
                    <i class="fa fa-trash-o"></i> Xóa
                </button>
                <button type="button" onclick="ManageRoleForCode_RoleForCode_OnSaveExit('#callbackManageRoleForCode_RoleForCode', 'true', '#frm_EditRoleForCode')" class="btn btn-success">Lưu & Thoát</button>
                <button type="button" onclick="ManageRoleForCode_RoleForCode_OnSaveExit('#callbackManageRoleForCode_RoleForCode', 'false', '#frm_EditRoleForCode')" class="btn btn-primary"><i class="fa fa-floppy-o"></i> Lưu dữ liệu</button>&nbsp;hoặc&nbsp;
                <a class="btn btn-link" href="@Url.Action("ManageRoleForCode", "ManagePermission", null, Request.Url.Scheme)"> Trở lại</a>

                <input type="hidden" id="callbackManageRoleForCode_RoleForCode"
                       data-otf-action-exit="@Url.Action("ManageRoleForCode", "ManagePermission", null, Request.Url.Scheme)"
                       data-otf-action="@Url.Action("RoleForCodeEdit", "ManagePermission", null, Request.Url.Scheme)?id=@Model.RoleForCodeGuid" />
            </div>
        </div>
    </div>

</div>

@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(
        @<script type="text/javascript">
            //Su dung cau hinh dropdownlist
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Lỗi! Vui lòng chọn ít nhất 1 mục.' },
                '.chosen-select-width': { width: "95%" }
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }

            if (typeof CKEDITOR != 'undefined') {
                var a = CKEDITOR.replace('text_Description', {
                    customConfig: '../../../Scripts/ManagePermission/ManageActionGroup/jsCKEditor-custom.js'
                });
            }
        </script>
, true);
}




